{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport stringUtils from \"mainam-react-native-string-utils\";\nimport Head from \"next/head\";\nimport $ from \"jquery\";\nimport \"./style.scss\";\n\nfunction index(props) {\n  useEffect(() => {\n    try {\n      $(\"body\").smartPanel();\n      $(\"[data-original-title]\").tooltip();\n    } catch (e) {}\n  }, []);\n  let x = {};\n\n  if (!props.sortable && props.sortable !== undefined) {\n    x[\"data-panel-sortable\"] = true;\n  }\n\n  if (props.allowClose === false) {\n    x[\"data-panel-close\"] = false;\n  }\n\n  if (props.allowFullScreen === false) {\n    x[\"data-panel-fullscreen\"] = false;\n  }\n\n  if (props.allowCollapse === false) {\n    x[\"data-panel-collapsed\"] = false;\n  }\n\n  if (props.allowSetting === false) {\n    x[\"data-panel-setting\"] = false;\n  }\n\n  return __jsx(\"div\", _extends({\n    id: props.id || stringUtils.guid(),\n    className: \"panel\"\n  }, x), __jsx(\"div\", {\n    className: \"panel-hdr color-success-600\"\n  }, __jsx(\"h2\", {\n    className: \"ui-sortable-handle\",\n    onDragOver: e => {\n      console.log(e);\n    }\n  }, props.title), props.toolbar && __jsx(\"div\", {\n    className: \"panel-toolbar\"\n  }, props.toolbar)), __jsx(\"div\", {\n    className: \"panel-container collapse fullscreen show\"\n  }, __jsx(\"div\", {\n    className: \"panel-content\"\n  }, props.children)), props.bottom, __jsx(Head, null, __jsx(\"script\", {\n    src: \"/js/panel.js\"\n  })));\n}\n\nexport default index;","map":{"version":3,"sources":["E:/iSofh/source/project-react-js-device-management/src/site/admin/components/admin/Panel/index.js"],"names":["React","useEffect","stringUtils","Head","$","index","props","smartPanel","tooltip","e","x","sortable","undefined","allowClose","allowFullScreen","allowCollapse","allowSetting","id","guid","console","log","title","toolbar","children","bottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,cAAP;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpBL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFG,MAAAA,CAAC,CAAC,MAAD,CAAD,CAAUG,UAAV;AACAH,MAAAA,CAAC,CAAC,uBAAD,CAAD,CAA2BI,OAA3B;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU,CAAE;AACf,GALQ,EAKN,EALM,CAAT;AAMA,MAAIC,CAAC,GAAG,EAAR;;AACA,MAAI,CAACJ,KAAK,CAACK,QAAP,IAAmBL,KAAK,CAACK,QAAN,KAAmBC,SAA1C,EAAqD;AACnDF,IAAAA,CAAC,CAAC,qBAAD,CAAD,GAA2B,IAA3B;AACD;;AACD,MAAIJ,KAAK,CAACO,UAAN,KAAqB,KAAzB,EAAgC;AAC9BH,IAAAA,CAAC,CAAC,kBAAD,CAAD,GAAwB,KAAxB;AACD;;AACD,MAAIJ,KAAK,CAACQ,eAAN,KAA0B,KAA9B,EAAqC;AACnCJ,IAAAA,CAAC,CAAC,uBAAD,CAAD,GAA6B,KAA7B;AACD;;AACD,MAAIJ,KAAK,CAACS,aAAN,KAAwB,KAA5B,EAAmC;AACjCL,IAAAA,CAAC,CAAC,sBAAD,CAAD,GAA4B,KAA5B;AACD;;AACD,MAAIJ,KAAK,CAACU,YAAN,KAAuB,KAA3B,EAAkC;AAChCN,IAAAA,CAAC,CAAC,oBAAD,CAAD,GAA0B,KAA1B;AACD;;AAED,SACE;AAAK,IAAA,EAAE,EAAEJ,KAAK,CAACW,EAAN,IAAYf,WAAW,CAACgB,IAAZ,EAArB;AAAyC,IAAA,SAAS,EAAC;AAAnD,KAA+DR,CAA/D,GACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,UAAU,EAAGD,CAAD,IAAO;AACjBU,MAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AACD;AAJH,KAMGH,KAAK,CAACe,KANT,CADF,EASGf,KAAK,CAACgB,OAAN,IAAiB;AAAK,IAAA,SAAS,EAAC;AAAf,KAAgChB,KAAK,CAACgB,OAAtC,CATpB,CADF,EAYE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAgChB,KAAK,CAACiB,QAAtC,CADF,CAZF,EAeGjB,KAAK,CAACkB,MAfT,EAgBE,MAAC,IAAD,QACE;AAAQ,IAAA,GAAG,EAAC;AAAZ,IADF,CAhBF,CADF;AAsBD;;AACD,eAAenB,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport stringUtils from \"mainam-react-native-string-utils\";\r\nimport Head from \"next/head\";\r\nimport $ from \"jquery\";\r\nimport \"./style.scss\";\r\n\r\nfunction index(props) {\r\n  useEffect(() => {\r\n    try {\r\n      $(\"body\").smartPanel();\r\n      $(\"[data-original-title]\").tooltip();\r\n    } catch (e) {}\r\n  }, []);\r\n  let x = {};\r\n  if (!props.sortable && props.sortable !== undefined) {\r\n    x[\"data-panel-sortable\"] = true;\r\n  }\r\n  if (props.allowClose === false) {\r\n    x[\"data-panel-close\"] = false;\r\n  }\r\n  if (props.allowFullScreen === false) {\r\n    x[\"data-panel-fullscreen\"] = false;\r\n  }\r\n  if (props.allowCollapse === false) {\r\n    x[\"data-panel-collapsed\"] = false;\r\n  }\r\n  if (props.allowSetting === false) {\r\n    x[\"data-panel-setting\"] = false;\r\n  }\r\n\r\n  return (\r\n    <div id={props.id || stringUtils.guid()} className=\"panel\" {...x}>\r\n      <div className=\"panel-hdr color-success-600\">\r\n        <h2\r\n          className=\"ui-sortable-handle\"\r\n          onDragOver={(e) => {\r\n            console.log(e);\r\n          }}\r\n        >\r\n          {props.title}\r\n        </h2>\r\n        {props.toolbar && <div className=\"panel-toolbar\">{props.toolbar}</div>}\r\n      </div>\r\n      <div className=\"panel-container collapse fullscreen show\">\r\n        <div className=\"panel-content\">{props.children}</div>\r\n      </div>\r\n      {props.bottom}\r\n      <Head>\r\n        <script src=\"/js/panel.js\"></script>\r\n      </Head>\r\n    </div>\r\n  );\r\n}\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}