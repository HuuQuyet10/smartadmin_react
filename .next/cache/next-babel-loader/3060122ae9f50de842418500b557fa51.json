{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport RouterWithPaths from \"@components/RouterWithPaths\";\nimport Admin from \"@admin\";\nimport User from \"@user\";\nimport Auth from \"@user/containers/auth/LoginScreen\";\nimport { connect } from \"react-redux\";\n\nfunction Status({\n  code,\n  children\n}) {\n  return __jsx(Route, {\n    render: ({\n      staticContext\n    }) => {\n      if (staticContext) staticContext.status = code;\n      return children;\n    }\n  });\n}\n\nfunction NotFound() {\n  return __jsx(React.Fragment, null, __jsx(Status, {\n    code: 404\n  }), __jsx(\"h2\", null, \"Not found\"), \";\");\n}\n\nfunction App() {\n  const routers = [{\n    path: [\"/login\"],\n    component: Auth\n  }, {\n    path: [\"/example\", \"/example/:function1\", \"/example/:function1/:function2\", \"/example/:function1/:function2/:function3\"],\n    component: Admin\n  }, {\n    path: [\"/admin\", \"/admin/:function1\", \"/admin/:function1/:function2\", \"/admin/:function1/:function2/:function3\"],\n    component: Admin\n  }, {\n    path: [\"/:function1\", \"/:function1/:id\", \"/:function1/:function2/:id\"],\n    component: User\n  }, {\n    path: \"/\",\n    component: connect(state => {\n      return {\n        auth: state.auth.auth || {}\n      };\n    })(props => {\n      if (props.auth && props.auth.id) {\n        props.history.replace(\"/admin\");\n      } else props.history.replace(\"/login\");\n\n      return __jsx(\"div\", null);\n    })\n  }];\n  return __jsx(Switch, null, routers.map((route, key) => {\n    if (route.component) return __jsx(RouterWithPaths, {\n      exact: true,\n      key: key,\n      path: route.path,\n      render: props => {\n        return __jsx(route.component, props);\n      }\n    });\n    return null;\n  }), __jsx(Route, {\n    component: NotFound\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/iSofh/source/project-react-js-device-management/src/pages/index.js"],"names":["Route","Link","Switch","RouterWithPaths","Admin","User","Auth","connect","Status","code","children","staticContext","status","NotFound","App","routers","path","component","state","auth","props","id","history","replace","map","route","key"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAOC,IAAP,MAAiB,OAAjB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAhB,EAAoC;AAClC,SACE,MAAC,KAAD;AACE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAuB;AAC7B,UAAIA,aAAJ,EAAmBA,aAAa,CAACC,MAAd,GAAuBH,IAAvB;AACnB,aAAOC,QAAP;AACD;AAJH,IADF;AAQD;;AAED,SAASG,QAAT,GAAoB;AAClB,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE;AAAd,IADF,EAEE,8BAFF,MADF;AAMD;;AAED,SAASC,GAAT,GAAe;AACb,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,CAAC,QAAD,CADR;AAEEC,IAAAA,SAAS,EAAEX;AAFb,GADc,EAKd;AACEU,IAAAA,IAAI,EAAE,CACJ,UADI,EAEJ,qBAFI,EAGJ,gCAHI,EAIJ,2CAJI,CADR;AAOEC,IAAAA,SAAS,EAAEb;AAPb,GALc,EAcd;AACEY,IAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ,8BAHI,EAIJ,yCAJI,CADR;AAOEC,IAAAA,SAAS,EAAEb;AAPb,GAdc,EAuBd;AACEY,IAAAA,IAAI,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,4BAAnC,CADR;AAEEC,IAAAA,SAAS,EAAEZ;AAFb,GAvBc,EA2Bd;AACEW,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,SAAS,EAAEV,OAAO,CAACW,KAAK,IAAI;AAC1B,aAAO;AACLC,QAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWA,IAAX,IAAmB;AADpB,OAAP;AAGD,KAJiB,CAAP,CAIRC,KAAK,IAAI;AACV,UAAIA,KAAK,CAACD,IAAN,IAAcC,KAAK,CAACD,IAAN,CAAWE,EAA7B,EAAiC;AAC/BD,QAAAA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsB,QAAtB;AACD,OAFD,MAEOH,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsB,QAAtB;;AACP,aAAO,kBAAP;AACD,KATU;AAFb,GA3Bc,CAAhB;AA0CA,SACE,MAAC,MAAD,QACGR,OAAO,CAACS,GAAR,CAAY,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3B,QAAID,KAAK,CAACR,SAAV,EACE,OACE,MAAC,eAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,GAAG,EAAES,GAFP;AAGE,MAAA,IAAI,EAAED,KAAK,CAACT,IAHd;AAIE,MAAA,MAAM,EAAEI,KAAK,IAAI;AACf,eAAO,MAAC,KAAD,CAAO,SAAP,EAAqBA,KAArB,CAAP;AACD;AANH,MADF;AAUF,WAAO,IAAP;AACD,GAbA,CADH,EAeE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEP;AAAlB,IAfF,CADF;AAmBD;;AAED,eAAeC,GAAf","sourcesContent":["import { Route, Link, Switch } from \"react-router-dom\";\r\nimport RouterWithPaths from \"@components/RouterWithPaths\";\r\nimport Admin from \"@admin\";\r\nimport User from \"@user\";\r\nimport Auth from \"@user/containers/auth/LoginScreen\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Status({ code, children }) {\r\n  return (\r\n    <Route\r\n      render={({ staticContext }) => {\r\n        if (staticContext) staticContext.status = code;\r\n        return children;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <>\r\n      <Status code={404} />\r\n      <h2>Not found</h2>;\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const routers = [\r\n    {\r\n      path: [\"/login\"],\r\n      component: Auth\r\n    },\r\n    {\r\n      path: [\r\n        \"/example\",\r\n        \"/example/:function1\",\r\n        \"/example/:function1/:function2\",\r\n        \"/example/:function1/:function2/:function3\"\r\n      ],\r\n      component: Admin\r\n    },\r\n    {\r\n      path: [\r\n        \"/admin\",\r\n        \"/admin/:function1\",\r\n        \"/admin/:function1/:function2\",\r\n        \"/admin/:function1/:function2/:function3\"\r\n      ],\r\n      component: Admin\r\n    },\r\n    {\r\n      path: [\"/:function1\", \"/:function1/:id\", \"/:function1/:function2/:id\"],\r\n      component: User\r\n    },\r\n    {\r\n      path: \"/\",\r\n      component: connect(state => {\r\n        return {\r\n          auth: state.auth.auth || {}\r\n        };\r\n      })(props => {\r\n        if (props.auth && props.auth.id) {\r\n          props.history.replace(\"/admin\");\r\n        } else props.history.replace(\"/login\");\r\n        return <div></div>;\r\n      })\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Switch>\r\n      {routers.map((route, key) => {\r\n        if (route.component)\r\n          return (\r\n            <RouterWithPaths\r\n              exact\r\n              key={key}\r\n              path={route.path}\r\n              render={props => {\r\n                return <route.component {...props} />;\r\n              }}\r\n            />\r\n          );\r\n        return null;\r\n      })}\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}