{"version":3,"file":"12.js","sources":["webpack:///./src/data-access/device-type-provider.js","webpack:///./src/site/admin/containers/device-type/create/index.js"],"sourcesContent":["import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.formType.search + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n\r\n  search(page, size, ma, ten) {\r\n    let url = constants.api.formType.search + \"?\";\r\n    url += \"page=\" + (page || 0) + \"&\";\r\n    url += \"size=\" + (size || 10) + \"&\";\r\n    if (ma) url += \"ma=\" + ma + \"&\";\r\n    if (ten) url += \"ten=\" + ten;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.formType.search + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, ma, ten) {\r\n    if (!id) {\r\n      let url = constants.api.formType.search;\r\n      return client.requestApi(\"post\", url, {\r\n        ma,\r\n        ten\r\n      });\r\n    } else {\r\n      let url = constants.api.formType.search + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        ma,\r\n        ten\r\n      });\r\n    }\r\n  },\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Form, Button, Col, Row, Input, Select, Switch } from \"antd\";\r\nimport formTypeProvider from \"@data-access/device-type-provider\";\r\nimport snackbar from \"@utils/snackbar-utils\";\r\nimport dateUtils from \"mainam-react-native-date-utils\";\r\nimport { AdminPage, Panel } from \"@admin/components/admin\";\r\nfunction index(props) {\r\n  const id = props.data && props.data.id;\r\n \r\n  const [state, _setState] = useState({\r\n    data: [],\r\n    ma: '',\r\n    ten: '',\r\n  });\r\n  const setState = (data = {}) => {\r\n    _setState((state) => {\r\n      return { ...state, ...data };\r\n    });\r\n  };\r\n  const getDetail = (id) => {\r\n    formTypeProvider\r\n      .getById(id)\r\n      .then((s) => {\r\n        if (s && s.code === 0) {\r\n          setState({\r\n            ma: s.data.ma,\r\n            ten: s.data.ten\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => { });\r\n  };\r\n  if (id){\r\n    getDetail(id);\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        create();\r\n      }\r\n    });\r\n  };\r\n  const { getFieldDecorator } = props.form;\r\n  const create = () => {\r\n    let ma = state.ma ? state.ma : (props.data || {}).ma\r\n    let ten = state.ten ? state.ten : (props.data || {}).ten\r\n    formTypeProvider.createOrEdit(id, ma, ten).then((s) => {\r\n      if (s && s.code === 0) {\r\n        if (id) {\r\n          snackbar.show(\"Cập nhật loại thiết bị thành công\", \"success\");\r\n        } else {\r\n          snackbar.show(\"Thêm mới loại thiết bị thành công\", \"success\");\r\n        }\r\n        props.onClose()\r\n      } else {\r\n        if (id) {\r\n          snackbar.show(\"Cập nhật loại thiết bị thất bại\", \"danger\");\r\n        } else {\r\n          snackbar.show(\"Thêm mới loại thiết bị thất bại\", \"danger\");\r\n        }\r\n      }\r\n    }).catch((e) => { });\r\n  };\r\n  return (\r\n    <AdminPage className=\"mgr-device-type\">\r\n      <Panel\r\n        title={id ? \"Chỉnh sửa loại thiết bị\" : \"Thêm mới loại thiết bị\"}\r\n        id={\"mgr-device-type\"}\r\n        allowClose={false}\r\n        allowCollapse={false}\r\n      >\r\n        <Form layout=\"vertical\" hideRequiredMark onSubmit={handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <Form.Item label=\"Mã loại thiết bị\">\r\n                {getFieldDecorator(\"ma\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Nhập mã loại thiết bị\",\r\n                    },\r\n                  ],\r\n                  initialValue: state.ma,\r\n                })(\r\n                  <Input\r\n                    onChange={(e) =>\r\n                      setState({\r\n                        ...state,\r\n                        ma: e.target.value,\r\n                      })\r\n                    }\r\n                    placeholder=\"Nhập mã loại thiết bị\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <Form.Item label=\"Loại thiết bị\">\r\n                {getFieldDecorator(\"ten\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Nhập loại thiết bị\",\r\n                    },\r\n                  ],\r\n                  initialValue: state.ten,\r\n                })(\r\n                  <Input\r\n                    onChange={(e) =>\r\n                      setState({\r\n                        ...state,\r\n                        ten: e.target.value,\r\n                      })\r\n                    }\r\n                    placeholder=\"Nhập loại thiết bị\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              borderTop: \"1px solid #e9e9e9\",\r\n              padding: \"16px 16px 0px\",\r\n              background: \"#fff\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Button onClick={props.onClose} style={{ marginRight: 8 }}>\r\n              Hủy\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n              {id ? \"Lưu thay đổi\" : \"Tạo mới\"}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Panel>\r\n    </AdminPage>\r\n  );\r\n}\r\n\r\nexport default Form.create()(index);\r\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AAPA;AAUA;AAGA;AAFA;AAKA;AAPA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AAPA;AAUA;AAGA;AAFA;AAKA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}