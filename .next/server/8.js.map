{"version":3,"file":"8.js","sources":["webpack:///./src/data-access/commercial-name-provider.js","webpack:///./src/data-access/country-provider.js","webpack:///./src/data-access/device-provider.js","webpack:///./src/data-access/manufacturer-provider.js","webpack:///./src/data-access/status-provider.js","webpack:///./src/data-access/supplier-provider.js","webpack:///./src/data-access/unit-provider.js","webpack:///./src/site/admin/components/common/Table/index.js","webpack:///./src/site/admin/containers/CreateDevice/index.js"],"sourcesContent":["import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.nameDevice.search + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n\r\n  search(page, size, name, active, selected) {\r\n    let url = constants.api.nameDevice.search + \"?\";\r\n    url += \"page=\" + (page || 0) + \"&\";\r\n    url += \"size=\" + (size || 10) + \"&\";\r\n    if (name) url += \"name=\" + name + \"&\";\r\n    if (active !== undefined && active != -1)\r\n      url += \"active=\" + (active ? 1 : 0) + \"&\";\r\n    if (selected !== undefined) url += \"selected=\" + (selected ? 1 : 0) + \"&\";\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.nameDevice.search + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, ma, ten, tenVietTat, dmLoaiThietBiId) {\r\n    if (!id) {\r\n      let url = constants.api.nameDevice.search;\r\n      return client.requestApi(\"post\", url, {\r\n        ma,\r\n        ten,\r\n        tenVietTat,\r\n        dmLoaiThietBiId\r\n      });\r\n    } else {\r\n      let url = constants.api.nameDevice.search + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        ma,\r\n        ten,\r\n        tenVietTat,\r\n        dmLoaiThietBiId\r\n      });\r\n    }\r\n  },\r\n};\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  search(page, size) {\r\n    let url = constants.api.country.search + \"?\";\r\n    url += \"page=\" + (page || 0) + \"&\";\r\n    url += \"size=\" + (size || 10) \r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n};\r\n","import client from \"@utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.device.search + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n\r\n  search(page, size, name, active, selected) {\r\n    let url = constants.api.device.search + \"?\";\r\n    url += \"page=\" + (page || 0) + \"&\";\r\n    url += \"size=\" + (size || 10) + \"&\";\r\n    if (name) url += \"name=\" + name + \"&\";\r\n    if (active !== undefined && active != -1)\r\n      url += \"active=\" + (active ? 1 : 0) + \"&\";\r\n    if (selected !== undefined) url += \"selected=\" + (selected ? 1 : 0) + \"&\";\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.device.search + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, param) {\r\n    if (!id) {\r\n      let url = constants.api.device.create;\r\n      return client.requestApi(\"post\", url, param);\r\n    } else {\r\n      let url = constants.api.device.create + \"/\" + id;\r\n      return client.requestApi(\"put\", url, param);\r\n    }\r\n  },\r\n  setMyProduct(products) {\r\n    let url = constants.api.product.set_my_product;\r\n    return client.requestApi(\"put\", url, {\r\n      products\r\n    });\r\n  }\r\n};\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.manufacturer.search + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n\r\n  search(page, size, name, active, selected) {\r\n    let url = constants.api.manufacturer.search + \"?\";\r\n    url += \"page=\" + (page || 0) + \"&\";\r\n    url += \"size=\" + (size || 10) + \"&\";\r\n    if (name) url += \"name=\" + name + \"&\";\r\n    if (active !== undefined && active != -1)\r\n      url += \"active=\" + (active ? 1 : 0) + \"&\";\r\n    if (selected !== undefined) url += \"selected=\" + (selected ? 1 : 0) + \"&\";\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.manufacturer.search + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, ma, ten) {\r\n    if (!id) {\r\n      let url = constants.api.manufacturer.search;\r\n      return client.requestApi(\"post\", url, {\r\n        ma,\r\n        ten\r\n      });\r\n    } else {\r\n      let url = constants.api.manufacturer.search + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        ma,\r\n        ten\r\n      });\r\n    }\r\n  },\r\n};\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.status.search + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n\r\n  search(page, size, ten) {\r\n    let url = constants.api.status.search + \"?\";\r\n    url += \"page=\" + (page || 0) + \"&\";\r\n    url += \"size=\" + (size || 10) + \"&\";\r\n    if (ten) url += \"ten=\" + ten;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.status.search + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, ten) {\r\n    if (!id) {\r\n      let url = constants.api.status.search;\r\n      return client.requestApi(\"post\", url, {\r\n        ten\r\n      });\r\n    } else {\r\n      let url = constants.api.status.search + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        ten\r\n      });\r\n    }\r\n  },\r\n};\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.supplier.search + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n\r\n  search(page, size, ma, ten) {\r\n    let url = constants.api.supplier.search + \"?\";\r\n    url += \"page=\" + (page || 0) + \"&\";\r\n    url += \"size=\" + (size || 10) + \"&\";\r\n    if (ma) url += \"ma=\" + ma + \"&\";\r\n    if (ten) url += \"ten=\" + ten;\r\n\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.supplier.search + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, ma, ten) {\r\n    if (!id) {\r\n      let url = constants.api.supplier.search;\r\n      return client.requestApi(\"post\", url, {\r\n        ma,\r\n        ten\r\n      });\r\n    } else {\r\n      let url = constants.api.supplier.search + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        ma,\r\n        ten\r\n      });\r\n    }\r\n  },\r\n};\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.unit.search + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n\r\n  search(page, size, ma, ten) {\r\n    let url = constants.api.unit.search + \"?\";\r\n    url += \"page=\" + (page || 0) + \"&\";\r\n    url += \"size=\" + (size || 10) + \"&\";\r\n    if (ma) url += \"ma=\" + ma + \"&\";\r\n    if (ten) url += \"ten=\" + ten;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.unit.search + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, ma, ten) {\r\n    if (!id) {\r\n      let url = constants.api.unit.search;\r\n      return client.requestApi(\"post\", url, {\r\n        ma,\r\n        ten\r\n      });\r\n    } else {\r\n      let url = constants.api.unit.search + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        ma,\r\n        ten\r\n      });\r\n    }\r\n  },\r\n};\r\n","import React from 'react'\r\nimport { Table } from 'antd';\r\nimport './style.scss';\r\n\r\nexport default function index(props) {\r\n    let className = 'custom-table ';\r\n    if (props.className)\r\n        className += props.className\r\n    return (\r\n        <Table\r\n            pagination={false}\r\n            {...props}\r\n            className={className}\r\n        />\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { AdminPage, Panel } from \"@admin/components/admin\";\r\nimport Table from \"@admin/components/common/Table\";\r\nimport \"./style.scss\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Tooltip,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  Select,\r\n  Icon,\r\n  TimePicker,\r\n  Checkbox,\r\n  Modal,\r\n  Upload,\r\n} from \"antd\";\r\nimport commerciaNameProvider from \"@data-access/commercial-name-provider\";\r\nimport unitProvider from \"@data-access/unit-provider\";\r\nimport manufacturerProvider from \"@data-access/manufacturer-provider\";\r\nimport supplierProvider from \"@data-access/supplier-provider\";\r\nimport countryProvider from \"@data-access/country-provider\";\r\nimport deviceProvider from \"@data-access/device-provider\";\r\nimport statusProvider from \"@data-access/status-provider\";\r\nimport snackbar from \"@utils/snackbar-utils\";\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\nfunction index(props) {\r\n  let deviceId = props.match.params.id\r\n  const [state, _setState] = useState({\r\n    size: 10,\r\n    page: 1,\r\n    data: [],\r\n    listNames: [],\r\n    listUnits: [],\r\n    listManufacturers: [],\r\n    listSupplier: [],\r\n    listCountry: [],\r\n    listStatus: [],\r\n\r\n    dmThietBiId: undefined,\r\n    ten: \"\",\r\n    soLuong: 1,\r\n    serial: \"\",\r\n    model: \"\",\r\n    dmDonViTinhId: undefined,\r\n    dmHangSanXuatId: undefined,\r\n    dmDonViCungCapId: undefined,\r\n    namSuDung: undefined,\r\n    nuocSanXuatId: undefined,\r\n    namSanXuat: undefined,\r\n    namMua: undefined,\r\n    giaNhap: \"\",\r\n    dmtrangThaiId: undefined,\r\n    donViSuDung: \"\",\r\n    ghiChu: \"\",\r\n    isTBPhuTro: false,\r\n\r\n    dmThietBiPTId: undefined,\r\n    dmThietBiPTName: \"\",\r\n    soLuongPT: 1,\r\n    serialPT: \"\",\r\n    dmHangSanXuatPTId: undefined,\r\n    dmHangSanXuatPTName: '',\r\n    nuocSanXuatPTId: undefined,\r\n    nuocSanXuatPTName: \"\",\r\n    namMuaPT: undefined,\r\n    trangThaiPT: undefined,\r\n    trangThaiPTName: \"\",\r\n    listTBPT: [],\r\n    dataPT: [],\r\n    isEditPT: false,\r\n    keyEdit: undefined\r\n  });\r\n\r\n  const setState = (data = {}) => {\r\n    _setState((state) => {\r\n      return { ...state, ...data };\r\n    });\r\n  };\r\n  const { getFieldDecorator } = props.form;\r\n\r\n  useEffect(() => {\r\n    onSearchStatus();\r\n    onSearchName();\r\n    onSearchUnit();\r\n    onSearchManufacturer();\r\n    onSearchSupplier();\r\n    onSearchCountry()\r\n    if (deviceId) {\r\n      getDetail(deviceId);\r\n    }\r\n  }, []);\r\n  const getDetail = (id) => {\r\n    deviceProvider.getById(id).then(s => {\r\n      if (s && s.code === 0) {\r\n        let data = s.data\r\n        setState({\r\n          dmThietBiId: data.dmThietBiId,\r\n          ten: data.ten,\r\n          soLuong: data.soLuong,\r\n          serial: data.serial,\r\n          model: data.model,\r\n          dmDonViTinhId: data.dmDonViTinhId,\r\n          dmHangSanXuatId: data.dmHangSanXuatId,\r\n          dmDonViCungCapId: data.dmDonViCungCapId,\r\n          donViSuDung: data.donViSuDung,\r\n          namSuDung: data.namSuDung,\r\n          nuocSanXuatId: data.nuocSanXuatId,\r\n          namSanXuat: data.namSanXuat,\r\n          namMua: data.namMua,\r\n          giaNhap: data.giaNhap,\r\n          dmtrangThaiId: data.dmtrangThaiId,\r\n          ghiChu: data.ghiChu,\r\n          isTBPhuTro: data.thietBiPhuTro && data.thietBiPhuTro.length ? true : false\r\n        })\r\n      }\r\n    }).catch(e => { })\r\n  }\r\n  const onSearchStatus = (page = 0, size = 10) => {\r\n    statusProvider.search(page, size)\r\n      .then((s) => {\r\n        if (s.code == 0) {\r\n          setState({\r\n            listStatus: s.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => { });\r\n  };\r\n  const onSearchName = (page = 0, size = 10) => {\r\n    commerciaNameProvider\r\n      .search(page, size)\r\n      .then((s) => {\r\n        if (s.code == 0) {\r\n          setState({\r\n            listNames: s.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => { });\r\n  };\r\n  const onSearchUnit = (page = 0, size = 10) => {\r\n    unitProvider\r\n      .search(page, size)\r\n      .then((s) => {\r\n        if (s.code == 0) {\r\n          setState({\r\n            listUnits: s.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => { });\r\n  };\r\n  const onSearchManufacturer = (page = 0, size = 10) => {\r\n    manufacturerProvider\r\n      .search(page, size)\r\n      .then((s) => {\r\n        if (s.code == 0) {\r\n          setState({\r\n            listManufacturers: s.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => { });\r\n  };\r\n  const onSearchSupplier = (page = 0, size = 10) => {\r\n    supplierProvider\r\n      .search(page, size)\r\n      .then((s) => {\r\n        if (s.code == 0) {\r\n          setState({\r\n            listSupplier: s.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => { });\r\n  };\r\n  const onSearchCountry = (page = 0, size = 10) => {\r\n    countryProvider\r\n      .search(page, size)\r\n      .then((s) => {\r\n        if (s.code == 0) {\r\n          setState({\r\n            listCountry: s.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => { });\r\n  };\r\n\r\n  const onCheckDate = () => {\r\n    let x = 1990;\r\n    let check = [];\r\n    do {\r\n      check.push(x);\r\n      x = x + 1;\r\n    } while (x <= new Date().getFullYear());\r\n    let c = check.map((item, index) => {\r\n      return (\r\n        <Option key={index} value={item}>\r\n          {item}\r\n        </Option>\r\n      );\r\n    });\r\n    return c;\r\n  };\r\n  const onCheckUsedDate = () => {\r\n    let x = 1990;\r\n    let check = [];\r\n    do {\r\n      check.push(x);\r\n      x = x + 1;\r\n    } while (x <= new Date().getFullYear() + 10);\r\n    let c = check.map((item, index) => {\r\n      return (\r\n        <Option key={index} value={item}>\r\n          {item}\r\n        </Option>\r\n      );\r\n    });\r\n    return c;\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let {\r\n      dmThietBiId,\r\n      ten,\r\n      soLuong,\r\n      serial,\r\n      model,\r\n      dmDonViTinhId,\r\n      dmHangSanXuatId,\r\n      dmDonViCungCapId,\r\n      namSuDung,\r\n      nuocSanXuatId,\r\n      namSanXuat,\r\n      namMua,\r\n      giaNhap,\r\n      dmtrangThaiId,\r\n      ghiChu,\r\n      donViSuDung,\r\n      listTBPT\r\n    } = state;\r\n    let TBPhuTro = listTBPT && listTBPT.length ? listTBPT.map(item => {\r\n      return {\r\n        dmThietBiId: item.dmThietBiPTId,\r\n        serial: item.serialPT,\r\n        dmHangSanXuatId: item.dmHangSanXuatPTId,\r\n        nuocSanXuatId: item.nuocSanXuatPTId,\r\n        namMua: item.namMuaPT,\r\n        dmTrangThaiId: item.trangThaiPT\r\n      };\r\n    }) : []\r\n\r\n    let param = {\r\n      dmThietBiId,\r\n      ten,\r\n      soLuong,\r\n      serial,\r\n      model,\r\n      dmDonViTinhId,\r\n      dmHangSanXuatId,\r\n      dmDonViCungCapId,\r\n      namSuDung,\r\n      nuocSanXuatId,\r\n      namSanXuat,\r\n      namMua,\r\n      giaNhap,\r\n      dmtrangThaiId,\r\n      ghiChu,\r\n      donViSuDung,\r\n      thietBiPhuTro: TBPhuTro\r\n    };\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        confirm({\r\n          title: \"Xác nhận\",\r\n          content: `Bạn có muốn thêm ${soLuong} thiết bị ${ten} vào hệ thống không? `,\r\n          okText: \"Đồng ý\",\r\n          okType: \"primary\",\r\n          cancelText: \"Hủy\",\r\n          onOk() {\r\n            deviceProvider\r\n              .createOrEdit(\"\", param)\r\n              .then((s) => {\r\n                if (s && s.code === 0) {\r\n                  snackbar.show(\"Thêm thành công\", \"success\");\r\n                  props.history.push(\"/admin/device\");\r\n                } else if (s.code === 1000) {\r\n                  snackbar.show(\"Thiếu thông tin\", \"danger\");\r\n                }\r\n              })\r\n              .catch((x) => { });\r\n          },\r\n          onCancel() {\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const onSubmitPT = (e) => {\r\n    e.preventDefault()\r\n    let {\r\n      dmThietBiPTId,\r\n      dmThietBiPTName,\r\n      soLuongPT,\r\n      serialPT,\r\n      dmHangSanXuatPTId,\r\n      dmHangSanXuatPTName,\r\n      nuocSanXuatPTId,\r\n      nuocSanXuatPTName,\r\n      namMuaPT,\r\n      trangThaiPT,\r\n      trangThaiPTName,\r\n      listTBPT,\r\n      isEditPT,\r\n      keyEdit\r\n    } = state\r\n    if (!dmThietBiPTId) {\r\n      snackbar.show(\"Vui lòng nhập tên thiết bị\", \"danger\");\r\n      return\r\n    } else if (!soLuongPT) {\r\n      snackbar.show(\"Vui lòng nhập số lượng\", \"danger\");\r\n      return\r\n    } else if (!namMuaPT) {\r\n      snackbar.show(\"Vui lòng chọn năm mua sắm\", \"danger\");\r\n      return\r\n    }\r\n    let param = {\r\n      dmThietBiPTId,\r\n      dmThietBiPTName,\r\n      soLuongPT,\r\n      serialPT,\r\n      dmHangSanXuatPTId,\r\n      dmHangSanXuatPTName,\r\n      nuocSanXuatPTId,\r\n      nuocSanXuatPTName,\r\n      namMuaPT,\r\n      trangThaiPT,\r\n      trangThaiPTName\r\n    }\r\n    if (isEditPT) {\r\n      let checkValue = listTBPT.filter((item, index) => keyEdit !== index)\r\n      checkValue.push(param)\r\n      setState({\r\n        listTBPT: checkValue,\r\n        dataPT: checkValue.map((item, index) => {\r\n          return {\r\n            key: index,\r\n            col1: index,\r\n            col2: item.dmThietBiPTName,\r\n            col3: item.serialPT,\r\n            col4: item.dmHangSanXuatPTName,\r\n            col5: item.nuocSanXuatPTName,\r\n            col6: item.namMuaPT,\r\n            col7: item.trangThaiPTName,\r\n            col8: index\r\n          };\r\n        }),\r\n        dmThietBiPTId: undefined,\r\n        dmThietBiPTName: \"\",\r\n        soLuongPT: 1,\r\n        serialPT: \"\",\r\n        dmHangSanXuatPTId: undefined,\r\n        dmHangSanXuatPTName: \"\",\r\n        nuocSanXuatPTId: undefined,\r\n        nuocSanXuatPTName: '',\r\n        namMuaPT: undefined,\r\n        trangThaiPT: undefined,\r\n        trangThaiPTName: '',\r\n        isEditPT: false,\r\n        keyEdit: undefined\r\n      })\r\n    } else {\r\n      setState({\r\n        listTBPT: state.listTBPT.concat(param),\r\n        dataPT: state.listTBPT.concat(param).map((item, index) => {\r\n          return {\r\n            key: index,\r\n            col1: index,\r\n            col2: item.dmThietBiPTName,\r\n            col3: item.serialPT,\r\n            col4: item.dmHangSanXuatPTName,\r\n            col5: item.nuocSanXuatPTName,\r\n            col6: item.namMuaPT,\r\n            col7: item.trangThaiPTName,\r\n            col8: index,\r\n          };\r\n        }),\r\n        dmThietBiPTId: undefined,\r\n        dmThietBiPTName: \"\",\r\n        soLuongPT: 1,\r\n        serialPT: \"\",\r\n        dmHangSanXuatPTId: undefined,\r\n        dmHangSanXuatPTName: \"\",\r\n        nuocSanXuatPTId: undefined,\r\n        nuocSanXuatPTName: \"\",\r\n        namMuaPT: undefined,\r\n        trangThaiPT: undefined,\r\n        trangThaiPTName: \"\",\r\n        isEditPT: false,\r\n        keyEdit: undefined\r\n      })\r\n    }\r\n  }\r\n  const onDeleteItem = (key) => {\r\n    confirm({\r\n      title: \"Xác nhận\",\r\n      content: `Bạn có muốn xóa thiết bị phụ trợ này?`,\r\n      okText: \"Xóa\",\r\n      okType: \"danger\",\r\n      cancelText: \"Hủy\",\r\n      onOk() {\r\n        let checkValue = state.listTBPT.filter((item, index) => key !== index)\r\n        setState({\r\n          listTBPT: checkValue,\r\n          dataPT: checkValue.map((item, index) => {\r\n            return {\r\n              key: index,\r\n              col1: index,\r\n              col2: item.dmThietBiPTName,\r\n              col3: item.serialPT,\r\n              col4: item.dmHangSanXuatPTName,\r\n              col5: item.nuocSanXuatPTName,\r\n              col6: item.namMuaPT,\r\n              col7: item.trangThaiPTName,\r\n              col8: index,\r\n            }\r\n          })\r\n        })\r\n      },\r\n      onCancel() {\r\n      },\r\n    });\r\n\r\n  }\r\n  const editItemPT = (key) => {\r\n    state.listTBPT.find((item, index) => {\r\n      if (key === index) {\r\n        setState({\r\n          dmThietBiPTId: item.dmThietBiPTId,\r\n          soLuongPT: item.soLuongPT,\r\n          serialPT: item.serialPT,\r\n          dmHangSanXuatPTId: item.dmHangSanXuatPTId,\r\n          nuocSanXuatPTId: item.nuocSanXuatPTId,\r\n          namMuaPT: item.namMuaPT,\r\n          trangThaiPT: item.trangThaiPT,\r\n          isEditPT: true,\r\n          keyEdit: key\r\n        })\r\n      }\r\n    })\r\n\r\n  };\r\n  return (\r\n    <div>\r\n      <AdminPage\r\n        icon=\"subheader-icon fal fa-window\"\r\n        header=\"Thêm mới thiết bị\"\r\n        subheader=\"Nhập thông tin thiết bị cần thêm\"\r\n      >\r\n        <Panel id=\"panel-list-site\" title=\"THÔNG TIN THIẾT BỊ\">\r\n          <Form layout=\"vertical\" hideRequiredMark>\r\n            <div className=\"container div-combo9\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Tên thiết bị *\" >\r\n                    {getFieldDecorator(\"dmThietBiId\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Chọn tên thiết bị\",\r\n                        },\r\n                      ],\r\n                      initialValue: state.dmThietBiId,\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"Chọn tên thiết bị\"\r\n                        onChange={(e) => {\r\n                          setState({\r\n                            dmThietBiId: e,\r\n                          });\r\n                        }}\r\n                        value={state.dmThietBiId}\r\n                        showSearch\r\n                        filterOption={(input, option) =>\r\n                          option.props.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {state.listNames && state.listNames.length\r\n                          ? state.listNames.map((item, index) => {\r\n                            return (\r\n                              item && (\r\n                                <Option key={index} value={item.id}>\r\n                                  {item.ten}\r\n                                </Option>\r\n                              )\r\n                            );\r\n                          })\r\n                          : \"\"}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Tên thương mại\"\r\n                    rules={[{ required: true, message: \"Nhập tên thương mại\" }]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Nhập tên thương mại\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          ten: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={state.ten}\r\n                    />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Số lượng *\"\r\n                    rules={[{ required: true, message: \"Nhập tên thương mại\" }]}\r\n                  >\r\n                    {getFieldDecorator(\"soLuong\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Nhập số lượng\",\r\n                        },\r\n                      ],\r\n                      initialValue: state.soLuong,\r\n                    })(\r\n                      <Input\r\n                        placeholder=\"Nhập số lượng\"\r\n                        type=\"number\"\r\n                        onChange={(e) => {\r\n                          setState({\r\n                            soLuong: e.target.value,\r\n                          });\r\n                        }}\r\n                        value={state.soLuong}\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Serial\"\r\n                    rules={[{ required: true, message: \"Nhập serial\" }]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Nhập serial\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          serial: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={state.serial}\r\n                    />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Chủng loại (model)\"\r\n                    rules={[{ required: true, message: \"Nhập chủng loại\" }]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Nhập chủng loại\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          model: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={state.model}\r\n                    />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Đơn vị tính *\">\r\n                    {getFieldDecorator(\"dmDonViTinhId\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Vui lòng nhập đơn vị tính\",\r\n                        },\r\n                      ],\r\n                      initialValue: state.dmDonViTinhId,\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"Chọn đơn vị tính\"\r\n                        onChange={(e) => {\r\n                          setState({\r\n                            dmDonViTinhId: e,\r\n                          });\r\n                        }}\r\n                        value={state.dmDonViTinhId}\r\n                        showSearch\r\n                        filterOption={(input, option) =>\r\n                          option.props.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {state.listUnits && state.listUnits.length\r\n                          ? state.listUnits.map((item, index) => {\r\n                            return (\r\n                              item && (\r\n                                <Option key={index} value={item.id}>\r\n                                  {item.ten}\r\n                                </Option>\r\n                              )\r\n                            );\r\n                          })\r\n                          : \"\"}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Hãng sản xuất\">\r\n                    <Select\r\n                      placeholder=\"Chọn hãng sản xuất\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          dmHangSanXuatId: e,\r\n                        });\r\n                      }}\r\n                      value={state.dmHangSanXuatId}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {state.listManufacturers && state.listManufacturers.length\r\n                        ? state.listManufacturers.map((item, index) => {\r\n                          return (\r\n                            item && (\r\n                              <Option key={index} value={item.id}>\r\n                                {item.ten}\r\n                              </Option>\r\n                            )\r\n                          );\r\n                        })\r\n                        : \"\"}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Nước sản xuất\">\r\n                    <Select\r\n                      placeholder=\"Nước sản xuất\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          nuocSanXuatId: e,\r\n                        });\r\n                      }}\r\n                      value={state.nuocSanXuatId}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {state.listCountry && state.listCountry.length\r\n                        ? state.listCountry.map((item, index) => {\r\n                          return (\r\n                            item && (\r\n                              <Option key={index} value={item.id}>\r\n                                {item.ten}\r\n                              </Option>\r\n                            )\r\n                          );\r\n                        })\r\n                        : \"\"}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Năm sản xuất\">\r\n                    <Select\r\n                      placeholder=\"Chọn năm sản xuất\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          namSanXuat: e,\r\n                        });\r\n                      }}\r\n                      value={state.namSanXuat}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {onCheckDate()}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Năm sử dụng\">\r\n                    <Select\r\n                      placeholder=\"Chọn năm sử dụng\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          namSuDung: e,\r\n                        });\r\n                      }}\r\n                      value={state.namSuDung}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {onCheckUsedDate()}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Nguyên giá\"\r\n                    rules={[\r\n                      { required: true, message: \"Please enter user name\" },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Nhập nguyên giá\"\r\n                      type=\"number\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          giaNhap: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={state.giaNhap}\r\n                    />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item name=\"name\" label=\"Đơn vị sử dụng\">\r\n                    <Input\r\n                      placeholder=\"Nhập đơn vị sử dụng\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          donViSuDung: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={state.donViSuDung}\r\n                    />\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Năm mua sắm *\">\r\n                    {getFieldDecorator(\"namMua\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Vui lòng chọn năm mua sắm\",\r\n                        },\r\n                      ],\r\n                      initialValue: state.namMua,\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"Chọn năm mua sắm\"\r\n                        onChange={(e) => {\r\n                          setState({\r\n                            namMua: e,\r\n                          });\r\n                        }}\r\n                        value={state.namMua}\r\n                        showSearch\r\n                        filterOption={(input, option) =>\r\n                          option.props.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {onCheckUsedDate()}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Đơn vị cung cấp *\">\r\n                    {getFieldDecorator(\"dmDonViCungCapId\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Vui lòng chọn đơn vị cung cấp\",\r\n                        },\r\n                      ],\r\n                      initialValue: state.dmDonViCungCapId,\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"Đơn vị cung cấp\"\r\n                        onChange={(e) => {\r\n                          setState({\r\n                            dmDonViCungCapId: e,\r\n                          });\r\n                        }}\r\n                        value={state.dmDonViCungCapId}\r\n                        showSearch\r\n                        filterOption={(input, option) =>\r\n                          option.props.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {state.listSupplier && state.listSupplier.length\r\n                          ? state.listSupplier.map((item, index) => {\r\n                            return (\r\n                              item && (\r\n                                <Option key={index} value={item.id}>\r\n                                  {item.ten}\r\n                                </Option>\r\n                              )\r\n                            );\r\n                          })\r\n                          : \"\"}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <Form.Item label=\"Trạng thái thiết bị *\">\r\n                    {getFieldDecorator(\"dmtrangThaiId\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Vui lòng chọn trạng thái\",\r\n                        },\r\n                      ],\r\n                      initialValue: state.dmtrangThaiId,\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"Chọn trạng thái thiết bị\"\r\n                        onChange={(e) => {\r\n                          setState({\r\n                            dmtrangThaiId: e,\r\n                          });\r\n                        }}\r\n                        value={state.dmtrangThaiId}\r\n                        showSearch\r\n                        filterOption={(input, option) =>\r\n                          option.props.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {state.listStatus && state.listStatus.length\r\n                          ? state.listStatus.map((item, index) => {\r\n                            return (\r\n                              item && (\r\n                                <Option key={index} value={item.id}>\r\n                                  {item.ten}\r\n                                </Option>\r\n                              )\r\n                            );\r\n                          })\r\n                          : \"\"}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item\r\n                    name=\"description\"\r\n                    label=\"Ghi chú\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Nhập ghi chú\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input.TextArea\r\n                      rows={5.5}\r\n                      placeholder=\"Nhập ghi chú\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          ghiChu: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={state.ghiChu}\r\n                    />\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\" style={{ marginBottom: 10 }}>\r\n                  <Checkbox checked={state.isTBPhuTro} onChange={() => { setState({ isTBPhuTro: !state.isTBPhuTro }) }}>Nhập thiết bị phụ trợ</Checkbox>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {\r\n              state.isTBPhuTro ? <div>\r\n                <Table\r\n                  scroll={{ x: 800, y: 500 }}\r\n                  style={{ marginLeft: -10, marginRight: -10 }}\r\n                  className=\"custom\"\r\n                  columns={[\r\n                    {\r\n                      title: (\r\n                        <div className=\"custome-header\">\r\n                          <div className=\"title-box\">Mã thiết bị</div>\r\n                        </div>\r\n                      ),\r\n                      width: 200,\r\n                      dataIndex: \"col1\",\r\n                      key: \"col1\",\r\n                      fixed: \"right\",\r\n                    },\r\n                    {\r\n                      title: (\r\n                        <div className=\"custome-header\">\r\n                          <div className=\"title-box\">Tên thiết bị</div>\r\n                        </div>\r\n                      ),\r\n                      width: 300,\r\n                      dataIndex: \"col2\",\r\n                      key: \"col2\",\r\n                      fixed: \"right\",\r\n                    },\r\n                    {\r\n                      title: (\r\n                        <div className=\"custome-header\">\r\n                          <div className=\"title-box\">Serial</div>\r\n                        </div>\r\n                      ),\r\n                      width: 300,\r\n                      dataIndex: \"col3\",\r\n                      key: \"col3\",\r\n                      fixed: \"right\",\r\n                    },\r\n                    {\r\n                      title: (\r\n                        <div className=\"custome-header\">\r\n                          <div className=\"title-box\">Hãng sản xuất</div>\r\n                        </div>\r\n                      ),\r\n                      width: 300,\r\n                      dataIndex: \"col4\",\r\n                      key: \"col4\",\r\n                      fixed: \"right\",\r\n                    },\r\n                    {\r\n                      title: (\r\n                        <div className=\"custome-header\">\r\n                          <div className=\"title-box\">Nước sản xuất</div>\r\n                        </div>\r\n                      ),\r\n                      width: 300,\r\n                      dataIndex: \"col5\",\r\n                      key: \"col5\",\r\n                      fixed: \"right\",\r\n                    },\r\n                    {\r\n                      title: (\r\n                        <div className=\"custome-header\">\r\n                          <div className=\"title-box\">Năm mua sắm</div>\r\n                        </div>\r\n                      ),\r\n                      width: 200,\r\n                      dataIndex: \"col6\",\r\n                      key: \"col6\",\r\n                      fixed: \"right\",\r\n                    },\r\n                    {\r\n                      title: (\r\n                        <div className=\"custome-header\">\r\n                          <div className=\"title-box\">Trạng thái thiết bị</div>\r\n                        </div>\r\n                      ),\r\n                      width: 300,\r\n                      dataIndex: \"col7\",\r\n                      key: \"col7\",\r\n                      fixed: \"right\",\r\n                    },\r\n                    {\r\n                      title: (\r\n                        <div className=\"custome-header\">\r\n                          <div className=\"title-box\">Tiện ích</div>\r\n                        </div>\r\n                      ),\r\n                      key: \"operation\",\r\n                      width: 100,\r\n                      fixed: \"right\",\r\n                      render: (item) => {\r\n                        return (\r\n                          <div className=\"col-action\">\r\n                            <Tooltip placement=\"topLeft\" title={\"Xóa\"}>\r\n                              <div>\r\n                                <a\r\n                                  onClick={() => onDeleteItem(item)}\r\n                                  className=\"btn btn-info btn-icon waves-effect waves-themed\"\r\n                                >\r\n                                  <i className=\"fal fa-trash-alt\"></i>\r\n                                </a>\r\n                              </div>\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"topLeft\" title={\"Sửa\"}>\r\n                              <div>\r\n                                <a\r\n                                  onClick={() => editItemPT(item)}\r\n                                  className=\"btn btn-info btn-icon waves-effect waves-themed\"\r\n                                >\r\n                                  <i className=\"fal fa-edit\"></i>\r\n                                </a>\r\n                              </div>\r\n                            </Tooltip>\r\n                          </div>\r\n                        );\r\n                      },\r\n                      dataIndex: \"col8\",\r\n                      key: \"col8\",\r\n                    },\r\n                  ]}\r\n                  dataSource={state.dataPT}\r\n                ></Table>\r\n                <div className=\"footer style-input10\">\r\n                  <Form.Item className=\"sty-selcect\">\r\n                    <Select\r\n                      value={state.dmThietBiPTId}\r\n                      placeholder=\"Chọn tên thiết bị\"\r\n                      onChange={(e, i) => {\r\n                        setState({\r\n                          dmThietBiPTId: e,\r\n                          dmThietBiPTName: i.props.children\r\n                        });\r\n                      }}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {state.listNames && state.listNames.length\r\n                        ? state.listNames.map((item, index) => {\r\n                          return (\r\n                            item && (\r\n                              <Option key={index} value={item.id}>\r\n                                {item.ten}\r\n                              </Option>\r\n                            )\r\n                          );\r\n                        })\r\n                        : \"\"}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                  >\r\n                    <Input\r\n                      className=\"sty-input9\"\r\n                      placeholder=\"Nhập số lượng\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          soLuongPT: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={state.soLuongPT}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                  >\r\n                    <Input\r\n                      className=\"sty-input9\"\r\n                      placeholder=\"Nhập số serial ngăn cách bởi dấu phím enter\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          serialPT: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={state.serialPT}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"sty-selcect\">\r\n                    <Select\r\n                      value={state.dmHangSanXuatPTId}\r\n                      placeholder=\"Chọn hãng sản xuất\"\r\n                      onChange={(e, i) => {\r\n                        setState({\r\n                          dmHangSanXuatPTId: e,\r\n                          dmHangSanXuatPTName: i.props.children\r\n                        });\r\n                      }}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {state.listManufacturers && state.listManufacturers.length\r\n                        ? state.listManufacturers.map((item, index) => {\r\n                          return (\r\n                            item && (\r\n                              <Option key={index} value={item.id}>\r\n                                {item.ten}\r\n                              </Option>\r\n                            )\r\n                          );\r\n                        })\r\n                        : \"\"}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item className=\"sty-selcect\">\r\n                    <Select\r\n                      value={state.nuocSanXuatPTId}\r\n                      placeholder=\"Chọn Nước sản xuất\"\r\n                      onChange={(e, i) => {\r\n                        setState({\r\n                          nuocSanXuatPTId: e,\r\n                          nuocSanXuatPTName: i.props.children\r\n                        });\r\n                      }}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {state.listCountry && state.listCountry.length\r\n                        ? state.listCountry.map((item, index) => {\r\n                          return (\r\n                            item && (\r\n                              <Option key={index} value={item.id}>\r\n                                {item.ten}\r\n                              </Option>\r\n                            )\r\n                          );\r\n                        })\r\n                        : \"\"}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item className=\"sty-selcect\">\r\n                    <Select\r\n                      value={state.namMuaPT}\r\n                      placeholder=\"Chọn năm mua sắm\"\r\n                      onChange={(e) => {\r\n                        setState({\r\n                          namMuaPT: e,\r\n                        });\r\n                      }}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {onCheckDate()}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item className=\"sty-selcect\">\r\n                    <Select\r\n                      value={state.trangThaiPT}\r\n                      placeholder=\"Chọn trạng thái thiết bị\"\r\n                      onChange={(e, i) => {\r\n                        setState({\r\n                          trangThaiPT: e,\r\n                          trangThaiPTName: i.props.children\r\n                        });\r\n                      }}\r\n                      showSearch\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {state.listStatus && state.listStatus.length\r\n                        ? state.listStatus.map((item, index) => {\r\n                          return (\r\n                            item && (\r\n                              <Option key={index} value={item.id}>\r\n                                {item.ten}\r\n                              </Option>\r\n                            )\r\n                          );\r\n                        })\r\n                        : \"\"}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={(e) => onSubmitPT(e)}\r\n                  >\r\n                    <i className=\"fal fa-plus-circle\" style={{ color: \"#fff\" }}></i>\r\n                  </Button>\r\n                </div>\r\n              </div> : \"\"\r\n            }\r\n\r\n\r\n            <div\r\n              className=\"style-button pull-right\"\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginRight: 8 }}\r\n                onClick={(e) => onSubmit(e)}\r\n              >\r\n                Thêm mới\r\n              </Button>\r\n              <Button type=\"danger\" htmlType=\"submit\">\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Panel>\r\n      </AdminPage>\r\n    </div>\r\n  );\r\n}\r\nexport default Form.create()(index);\r\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAvCA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAnCA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAnCA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AA9BA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAlCA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAjCA;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AADA;AAGA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AACA;AA6CA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AApBA;AAsBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAdA;AAgBA;AACA;AAAA;AACA;AA1BA;AA6BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AAPA;AAUA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAiBA;AAEA;AAAA;AAAA;AAKA;AAMA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AAPA;AAWA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AAEA;AACA;AAFA;AAKA;AAPA;AAUA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAcA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AAPA;AAWA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AAPA;AAWA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AAPA;AAUA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAiBA;AAEA;AAAA;AAAA;AAKA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAiBA;AAEA;AAAA;AAAA;AAKA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAiBA;AAEA;AAAA;AAAA;AAKA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAmBA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAYA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AAPA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AAPA;AAUA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAoBA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AAPA;AAUA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAiBA;AAEA;AAAA;AAAA;AAKA;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AAPA;AAUA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AAiBA;AAEA;AAAA;AAAA;AAKA;AAOA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAJA;AAWA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAapCA;AAuCA;AAzHA;AA2HA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAVA;AAkBA;AAEA;AAAA;AAAA;AAKA;AAKA;AADA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAYA;AADA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAVA;AAkBA;AAEA;AAAA;AAAA;AAKA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAVA;AAkBA;AAEA;AAAA;AAAA;AAKA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AATA;AAkBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAVA;AAkBA;AAEA;AAAA;AAAA;AAKA;AAKA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AAAA;AAAA;AASA;AACA;AAAA;;;;;;;;;;;;;;;A","sourceRoot":""}